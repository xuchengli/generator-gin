package db

import (
	"<%= project_name %>/config"
	"<%= project_name %>/models"
	"fmt"
	"log"
	"os"
	"time"

	"gorm.io/driver/mysql"
	"gorm.io/gorm"
	"gorm.io/gorm/logger"

	"github.com/sirupsen/logrus"
)

func Connect(config config.Configuration) *gorm.DB {
	dsn := fmt.Sprintf("%s:%s@tcp(%s:%d)/%s?charset=utf8mb4&parseTime=True&loc=Local", config.MySQL.User, config.MySQL.Pass,
		config.MySQL.Host, config.MySQL.Port, config.MySQL.DB)

	logrus.WithField("地址", dsn).Info("连接数据库")

	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{
		Logger: logger.New(
			log.New(os.Stdout, "\r\n", log.LstdFlags),
			logger.Config{
				SlowThreshold:             time.Second,   // 慢 SQL 阈值
				LogLevel:                  logger.Silent, // 日志级别
				IgnoreRecordNotFoundError: false,         // 打印 ErrRecordNotFound（记录未找到）错误
				Colorful:                  true,          // 彩色打印
			},
		),
	})
	if err != nil {
		panic(err)
	}
	db.AutoMigrate(&models.UserModel{})
	// 设置是否打印sql语句
	if config.MySQL.Debug {
		db = db.Debug()
	}
	return db
}
